C51 COMPILER V9.54   IR                                                                    01/18/2023 17:01:32 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: D:\KeilC51\C51\BIN\C51.EXE IR.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\IR.lst
                    -) TABS(2) OBJECT(.\Objects\IR.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Int0.h"
   3          #include "Timer0.h"
   4          
   5          unsigned int IR_Time;
   6          unsigned char IR_State;
   7          
   8          unsigned char IR_Date[4];
   9          unsigned char IR_pDate;
  10          
  11          unsigned char IR_Address;
  12          unsigned char IR_Command;
  13          
  14          unsigned char IR_RepeatFlag;
  15          unsigned char IR_DateFlag;
  16          
  17          void IR_Init()
  18          {
  19   1        Timer0_Init();
  20   1        Int0_Init();
  21   1      }
  22          
  23          unsigned char IR_GetDateFlag()
  24          {
  25   1        if(IR_DateFlag)
  26   1        {
  27   2          IR_DateFlag = 0;
  28   2          return 1;
  29   2        }
  30   1        return 0;
  31   1      }
  32          
  33          unsigned char IR_GetRepeatFlag()
  34          {
  35   1        if(IR_RepeatFlag)
  36   1        {
  37   2          IR_RepeatFlag = 0;
  38   2          return 1;
  39   2        }
  40   1        return 0;
  41   1      }
  42          
  43          unsigned char IR_GetAddress()
  44          {
  45   1        return IR_Address;
  46   1      }
  47          
  48          unsigned char IR_GetCommand()
  49          {
  50   1        return IR_Command;
  51   1      }
  52          
  53          
  54          void Int0_Routine()   interrupt 0
C51 COMPILER V9.54   IR                                                                    01/18/2023 17:01:32 PAGE 2   

  55          {
  56   1        if(IR_State == 0)
  57   1        {
  58   2          Timer0_SetCounter(0);
  59   2          Timer0_Run(1);
  60   2          IR_State=1;
  61   2          
  62   2        }
  63   1        else if(IR_State == 1)
  64   1        {
  65   2          IR_Time = Timer0_GetCounter();
  66   2          Timer0_SetCounter(0);
  67   2          if(IR_Time<12440+500 && IR_Time>12400-500)
  68   2          {
  69   3            IR_State=2;
  70   3          }
  71   2          else if(IR_Time<10368+500 && IR_Time>10368-500)
  72   2          {
  73   3            IR_RepeatFlag = 1;
  74   3            IR_State = 0;
  75   3          }
  76   2          else
  77   2          {
  78   3            IR_State = 1;
  79   3          }
  80   2        }
  81   1        else if(IR_State == 2)
  82   1        {
  83   2          IR_Time = Timer0_GetCounter();
  84   2          Timer0_SetCounter(0);
  85   2          if(IR_Time<1032+300 && IR_Time>1032-300)
  86   2          {
  87   3            
  88   3            IR_Date[IR_pDate/8]&=~(0x01<<IR_pDate%8);
  89   3            IR_pDate++;
  90   3          }
  91   2          else if(IR_Time<2073+500 && IR_Time>2073-500)
  92   2          {
  93   3            IR_Date[IR_pDate/8]|=0x01<<IR_pDate%8;
  94   3            IR_pDate++;
  95   3          }
  96   2          else
  97   2          {
  98   3            
  99   3            IR_State = 1;
 100   3            IR_pDate = 0;
 101   3          }
 102   2          if(IR_pDate>=32)
 103   2          {
 104   3            
 105   3            IR_pDate = 0;
 106   3            if((IR_Date[0]==~IR_Date[1]) && (IR_Date[2]==~IR_Date[3]))
 107   3            {
 108   4              IR_Address = IR_Date[0];
 109   4              IR_Command = IR_Date[2];
 110   4              IR_DateFlag = 1;
 111   4            }
 112   3            Timer0_Run(0);
 113   3            IR_State = 0;
 114   3          }
 115   2        }
 116   1      }
C51 COMPILER V9.54   IR                                                                    01/18/2023 17:01:32 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    370    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
