C51 COMPILER V9.54   LCD1602                                                               01/16/2023 20:11:53 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\KeilC51\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\L
                    -CD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          sbit LCD_RS=P2^6;
   4          sbit LCD_RW=P2^5;
   5          sbit LCD_E=P2^7;
   6          
   7          #define LCD_Date P0
   8          
   9          void LCD_Delay()    //@11.0592MHz
  10          {
  11   1        unsigned char i, j;
  12   1      
  13   1        i = 2;
  14   1        j = 199;
  15   1        do
  16   1        {
  17   2          while (--j);
  18   2        } while (--i);
  19   1      }
  20          
  21          
  22          void LCD_WriteCommand(unsigned char Byte)
  23          {
  24   1        LCD_RS = 0;
  25   1        LCD_RW = 0;
  26   1        LCD_Date = Byte;
  27   1        LCD_E = 1;
  28   1        LCD_Delay();
  29   1        LCD_E = 0;
  30   1        LCD_Delay();
  31   1      }
  32          
  33          
  34          void LCD_WriteDate(unsigned char Byte)
  35          {
  36   1        LCD_RS = 1;
  37   1        LCD_RW = 0;
  38   1        LCD_Date = Byte;
  39   1        LCD_E = 1;
  40   1        LCD_Delay();
  41   1        LCD_E = 0;
  42   1        LCD_Delay();
  43   1      }
  44          
  45          void Set_Set(unsigned char Line, unsigned char Col)
  46          {
  47   1        if(Line==1)
  48   1        {
  49   2          LCD_WriteCommand(0x80|(Col-1));
  50   2        }
  51   1        else
  52   1        {
  53   2          LCD_WriteCommand(0x80|(Col-1)+0x40);
  54   2        }
C51 COMPILER V9.54   LCD1602                                                               01/16/2023 20:11:53 PAGE 2   

  55   1      }
  56          
  57          void LCD_Init()
  58          {
  59   1        LCD_WriteCommand(0x38);
  60   1        LCD_WriteCommand(0x0C);
  61   1        LCD_WriteCommand(0x06);
  62   1        LCD_WriteCommand(0x01);
  63   1      }
  64          
  65          void LCD_ShowChar(unsigned char Line, unsigned char Col, unsigned char Char)
  66          {
  67   1        Set_Set(Line, Col);
  68   1        LCD_WriteDate(Char);
  69   1      }
  70          
  71          void LCD_ShowString(unsigned char Line, unsigned char Col, char* String)
  72          {
  73   1        Set_Set(Line, Col);
  74   1        while(*String)
  75   1        {
  76   2          LCD_WriteDate(*String);
  77   2          String++;
  78   2        }
  79   1      }
  80          
  81          int LCD_pow(int x, int y)
  82          {
  83   1        unsigned char i;
  84   1        int sum = 1;
  85   1        for(i=0;i<y;i++)
  86   1        {
  87   2          sum*=x;
  88   2        }
  89   1        return sum;
  90   1      }
  91          
  92          void LCD_ShowNum(unsigned char Line, unsigned char Col, unsigned int Num, unsigned char Length)
  93          {
  94   1        unsigned char i;
  95   1        Set_Set(Line, Col);
  96   1        for(i=Length;i>0;i--)
  97   1        {
  98   2          LCD_WriteDate(0x30|(Num/LCD_pow(10,i-1)%10));
  99   2      
 100   2        }
 101   1      
 102   1      }
 103          
 104          
 105          void LCD_ShowSignedNum(unsigned char Line, unsigned char Col, int Num, unsigned char Length)
 106          {
 107   1        unsigned char i;
 108   1        
 109   1        Set_Set(Line, Col);
 110   1        if(Num<0)
 111   1        {
 112   2          Num = -Num;
 113   2          LCD_WriteDate('-');
 114   2        }
 115   1        for(i=Length;i>0;i--)
 116   1        {
C51 COMPILER V9.54   LCD1602                                                               01/16/2023 20:11:53 PAGE 3   

 117   2          LCD_WriteDate(0x30|(Num/LCD_pow(10,i-1)%10));
 118   2      
 119   2        }
 120   1        
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    277    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
